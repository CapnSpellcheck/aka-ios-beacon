//
//  AKAObservableCollection.h
//  AKACommons
//
//  Created by Michael Utech on 02.05.15.
//  Copyright (c) 2015 Michael Utech & AKA Sarl. All rights reserved.
//

#import <Foundation/Foundation.h>

@interface AKAObservableCollection : NSObject

#pragma mark - Initialization

/**
 * Initializes the instance as empty (mutable) collection.
 *
 * @return The new instance
 */
- (instancetype)init;

/**
 * Initializes the instance containing the elements of the specified
 * array. The specified array is not used internally (except for copying
 * its contents)
 *
 * @param array The array containing the initial content for the collection.
 *
 * @return The new instance
 */
- (instancetype)initWithArray:(NSArray*)array;

/**
 * Initializes the instance to use the specified mutable array as
 * storage for the collection. The contents of the array is preserved.
 * Changes applied to the collection will be forwarded to the mutable
 * array.
 *
 * @param mutableArray the mutable array to use as storage for collection elements.
 *
 * @return The new instance
 */
- (instancetype)initWithMutableArray:(NSMutableArray*)mutableArray;

#pragma mark - Indexed Item Property Implementation

- (void)insertObject:(id)object
      inItemsAtIndex:(NSUInteger)index;
- (void)insertItems:(NSArray *)array
          atIndexes:(NSIndexSet*)indexes;
- (void)removeObjectFromItemsAtIndex:(NSUInteger)index;
- (void)removeItemsAtIndexes:(NSIndexSet *)indexes;
- (id)objectInItemsAtIndex:(NSUInteger)index;
- (NSUInteger)countOfItems;

#pragma mark - Convenience Methods for Indexed Item Property

- (void)removeAllItems;

#pragma mark - Mutable Array Proxy

/**
 * A mutable array representing the contents of the collection. Changes
 * made to this array will be forwarded to the collection and will
 * trigger KVO change events.
 *
 * @note The returned array is not identical to the mutable array passed
 * to initWithMutableArray: but a proxy generated by mutableArrayValueForKey:
 * for the indexed @c items property.
 */
@property(nonatomic, readonly) NSMutableArray* mutableArray;

@end
